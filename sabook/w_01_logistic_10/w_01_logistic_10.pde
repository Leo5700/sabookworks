
/*

 код. движение курсора мыши преобразует в картинку.
 в целом, идея визуалок, которые я создаю -- это идея отображений.
 схема всегда одинакова:
 
 входной поток --> преобразование --> отображение
 
 здесь *входным потоком* являются горизонтальная и вертикальная координаты мыши,
 *преобразованием* - хаотические решения логистического уравнения в виде 
 угла поворота системы координат и радиуса точки,
 а *отображением* - вывод тысячи результатов вычислений в каждый кадр.
 
 входным потоком может быть звук (показания микрофона, иначе говоря,
 вольтметра), преобразованием как правило является хаотическое решение 
 системы уравнений с параметрами, определяемыми входным потоком, 
 а отображением -- точки, линии, многогранники, всё на что хватит фантазии, 
 выводимые на монитор или проектор. выходом может быть и звук, перемещения 
 сервоприводов, изменение яркости точек на tft-экране и т.д.
 
 и гиперпараметры. всем рулят гиперпараметры


 немного текста по книге смотри в .md

 
 */


float R;
float x = 0.5;
float x_new;
float y = 0.5;
float y_new;

float deg = PI/180;
float k1, k2;


void setup() {
  fullScreen();
  background(0);
  stroke(255, 100);
  strokeWeight(1);
  cursor(CROSS);
}


void draw() {
  x = random(0, 1);
  y = random(0, 1);

  translate(width*.5, height*.5);

  float rx = map(mouseX, 0, width, 3.5, 4); //
  float ry = map(mouseY, 0, height, 2.5, 4); // гиперпараметр

  if (keyPressed)
    background(0);

  for (int j=0; j<1000; j++) { //
    x_new = rx * x * (1 - x);
    x = x_new;
    y_new = ry * y * (1 - y);
    y = y_new;

    float xp = map(x, 0.2, 0.8, 0, width);
    float yp = map(y, 0.2, 0.8, 0, TWO_PI);

    pushMatrix();
    rotate(yp);
    point(xp, yp);
    popMatrix();
  }
}
