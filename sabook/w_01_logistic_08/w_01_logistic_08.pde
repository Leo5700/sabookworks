/*

 Так.
 
 Иногда ты ешь медведя, иногда медведь есть тебя.
 
 Сегодня я хотел создать логистическое дерево в трёх сферических координатах --
 что же в итоге? Полное и безоговорочное нихуя, того, что опишет дерево просто нет,
 нет технически -- но есть ли математически? Если есть идеи, как превратить диаграмму 
 Фейгенбаума в трёхмерное дерево с изменчивой "листвой" при R > 3.8, вы не задумывайтесь, 
 пишите код и/или пишите мне.
 
 А пока, всё идёт как идёт, опишем строки кода, это ...
 
 */


float deg = PI / 180;


void setup() { // всё подряд, setup это нулевая итерация, как бы нулевой кадр мультфильма
  //size(1080, 1080); // это размер окна, в пикселях, сейчас не нужно но может пригодиться
  fullScreen(); // здесь мы разворячиваем картинку на полный экран, поставив в скобках номер монитора можно отправить картику на конкретный экран, но работает это не везде и не всегда
  background(0); // первый  экран зальём чёрным (цвет ноль), хотя это и не нужно
  stroke(255, 200); // цвет отрисовки контуров, 255 это белый, 200 это прозрачность (200 это почти не прозрачный, т.к. 255 не прозрачный вовсе)
  strokeWeight(1); // толщина линий, точки это тоже линии, так что это размер точек
  noCursor(); // не показывать курсор мыши (под андроид не нужно, но в винде линуксе и яблоке пригодится)
}


void draw() {
  backAlpha(0, 80); // это функция (смотри ниже), которая заливает экран полупрозрачным фоном, позволяет получить картинку, слегка расянутую по континуму пространства-времени (не плохо, правда?)
  int k = 6; // это ... число сегментов паттерна итоговой картинки по базовому углу. нет, давай так: чисто повторений.. хотя это не совсем повторения.. вот ёклмн самое простое хрен опишешь, поменяй посмотри на что влияет и делов-то. 
  translate(width*.5, height*.5); // переносим начало координат в центр экрана
  for (int i=0; i<k; i++) { // то самое число раз do:
    pushMatrix(); // так, ищи где на том же уровне popMatrix, это начало от сдвига координат, для того, чтобы вернуть систему координат обратно, не путайся, таких финтов тут два
    rotate((TWO_PI / k) * i); // поворачиваем систему координат на некторый угол, один из k
    float R0 = 3; // это стартовое значение засыпки коэффичиента R. Царица Небесная, как далеко ещё до Петушков
    float R1 = 4; // это.
    float sh = sin((frameCount * .01) + i) * 0.5 + 0.5; // а вот здесь мы делаем финт: с одной стороны заставляем опорную координату (это ничн=его что я начал вводлить термины без определений? опорная координата это нечто, влияющее на анимацию в целом, мы ведь здесь (если ч=кто не понял) рисуем мультики, мультики, мультики, первым делом мультики и больше ничего, во вторых изучаем математику бытия, но это не точно; кстати, о математике бытия, не сочтите за пошлость, я проведу параллель
    // и не с чем нибудь, а с функцией Эрвина Шреденгира, коллапсирующей в конечное решение. Так вот, посмотрите внимательно: из математики копеечного логистического аттраткора 
    // не следует ли, что в каждой точке итерирования функции calcLog мы с вами оказываемся в коробке рядом с кошкой Шрёдингера?
    // для более глубокого погружения в вопрос, нам с вами понадобится толика пива и лекция тов. Семихатова https://youtu.be/bOi6OAwCNH4 
    // )
    //float x0 = map(i, 0, k, 0.01, 0.99); //это не интересно
    float x0 = sh; // sh это "shift", то есть "сдвиг", некая перемненная, которая толкает нас вдоль по континууму, и исходное значение X мы берём именно это
    for (PVector r : calcLog(x0, R0, R1, 2000)) { // //  вычисяем значение функции (она ниже) и итерируемся по ней 
      pushMatrix(); // снова локализуем смещение координат (до popMatrix ниже)
      float a = map(r.y, 0, 1, -20*deg, 30*deg); // // это...
      rotate(a);
      point(map(r.x, R0, R1, 0, 360), 0); //
      popMatrix();
    }
    popMatrix();
  }
}


PVector[] calcLog(float x0, float Rmin, float Rmax, int n) {
  // x0 - начальное значение
  // Rmin, Rmax - диапазон коэффициента R
  // m - длина массива результатов
  // На выходе: массив объектов типа PVector, 
  //    координаты PVector: R, x (к которому сошлось решение), x0

  PVector[] result = new PVector[n];


  for (int j=0; j<n; j++) {
    float x = x0; 
    float R;
    float x_new;
    R = random(Rmin, Rmax);
    for (int i=0; i<500; i++) { // итерации до сходимости
      x_new = R * x * (1 - x);
      x = x_new;
    }
    PVector pv = new PVector(R, x, x0);
    result[j] = pv;
  }

  return result;
}


void backAlpha(float c, float a) {
  pushStyle();
  noStroke();
  fill(c, a);
  rect(0, 0, width, height);
  popStyle();
}


/* 
 
Есть-ли что ни будь на земле, что имело бы значение и могло бы даже изменить ход событий не только на земле, но и в других мирах? — спросил я своего учителя.
Есть, — ответил мне мой учитель.
Что же это? — спросил я.
Это... — начал мой учитель и вдруг замолчал.
Я стоял и напряженно ждал его ответа. А он молчал.
И я стоял и молчал.
И он молчал.
И я стоял и молчал.
И он молчал.
Мы оба стоим и молчим.
Хо-ля-ля!
Мы оба стоим и молчим!
Хо-ля-ля!
Да да, мы оба стоим и молчим!
 
 */
